name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-upload:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    env:
      # Map repo secrets -> AWS env vars the CLI expects
      AWS_ACCESS_KEY_ID: ${{ secrets.B2_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APP_KEY }}
      AWS_DEFAULT_REGION: us-west-000
      AWS_ENDPOINT_URL_S3: https://s3.us-west-000.backblazeb2.com
      APP_NAME: "Media Viewer"
      S3_BUCKET: "4gmXev0u4Um"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile

      # Build + package the Electron app
      - name: Build app
        run: pnpm build

      - name: Package (macOS arm64)
        run: pnpm electron-builder --mac --universal --publish never

      # Backblaze-friendly preflight (NO STS)
      - name: Preflight S3 auth (Backblaze)
        run: |
          set -e
          aws --version
          # list bucket (works on B2) â€“ proves creds+endpoint are wired
          aws s3 ls s3://$S3_BUCKET/

      # Sync your release artifacts to B2
      - name: Upload release artifacts to Backblaze S3
        run: |
          set -e
          # Example paths: adjust to your dist/release output
          aws s3 cp "dist/latest-mac.yml" "s3://$S3_BUCKET/latest-mac.yml"
          aws s3 cp "dist/MediaViewer-*.blockmap" "s3://$S3_BUCKET/" --recursive --exclude "*" --include "*.blockmap"
          aws s3 cp "dist/MediaViewer-*.dmg" "s3://$S3_BUCKET/" --recursive --exclude "*" --include "*.dmg"

      # (Optional) Upload CI artifacts for debugging
      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
