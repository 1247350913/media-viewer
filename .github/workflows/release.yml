name: Release

on:
  push:
    tags:
      - 'v*'   # run on version tags

permissions:
  contents: write

env:
  # ---- Backblaze S3 (B2) config ----
  AWS_ACCESS_KEY_ID: ${{ secrets.B2_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APP_KEY }}
  AWS_DEFAULT_REGION: us-east-005
  AWS_REGION: us-east-005
  # Force PATH-STYLE so mixed-case bucket names work
  AWS_S3_USE_PATH_STYLE: "true"
  # Set BOTH endpoint envs so every call picks it up
  AWS_ENDPOINT_URL: https://s3.us-east-005.backblazeb2.com
  AWS_ENDPOINT_URL_S3: https://s3.us-east-005.backblazeb2.com
  # Bucket NAME:
  S3_BUCKET: 4gmXev0u4Um

# -----------------------------
# macOS build (arm64 DMG/ZIP)
# -----------------------------
jobs:
  build-macos:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node + pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Preflight S3 auth (Backblaze)
        run: |
          set -euo pipefail
          aws --version
          echo "Endpoint: $AWS_ENDPOINT_URL_S3"
          echo "Region:   $AWS_DEFAULT_REGION"
          echo "Bucket:   $S3_BUCKET"

          # Head bucket = best quick check (doesn't require List permission)
          aws s3api head-bucket \
            --bucket "$S3_BUCKET" \
            --endpoint-url "$AWS_ENDPOINT_URL_S3" \
            --region "$AWS_DEFAULT_REGION"

          # Optional write test (uncomment if you want a strong check)
          # echo ok > /tmp/healthcheck.txt
          # aws s3 cp /tmp/healthcheck.txt "s3://$S3_BUCKET/_healthcheck.$GITHUB_RUN_ID" --endpoint-url "$AWS_ENDPOINT_URL_S3" --region "$AWS_DEFAULT_REGION"
          # aws s3 rm "s3://$S3_BUCKET/_healthcheck.$GITHUB_RUN_ID" --endpoint-url "$AWS_ENDPOINT_URL_S3" --region "$AWS_DEFAULT_REGION"

      - name: Build (macOS universal)
        run: pnpm electron-builder --mac dmg zip --universal --publish never

      - name: Show artifacts
        run: ls -lah dist || true

      - name: Upload to Backblaze (macOS artifacts)
        run: |
          aws s3 cp "dist/" "s3://$S3_BUCKET/" \
            --recursive \
            --endpoint-url "$AWS_ENDPOINT_URL_S3" \
            --region "$AWS_DEFAULT_REGION" \
            --acl public-read \
            --follow-symlinks

  # -----------------------------
  # Windows build (x64 NSIS)
  # -----------------------------
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node + pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Preflight S3 auth (Backblaze)
        # Use PowerShell on Windows but same flags & env
        shell: pwsh
        run: |
          aws --version
          Write-Host "Endpoint: $Env:AWS_ENDPOINT_URL_S3"
          Write-Host "Region:   $Env:AWS_DEFAULT_REGION"
          Write-Host "Bucket:   $Env:S3_BUCKET"
          aws s3api head-bucket --bucket "$Env:S3_BUCKET" --endpoint-url "$Env:AWS_ENDPOINT_URL_S3" --region "$Env:AWS_DEFAULT_REGION"

      - name: Build (Windows x64)
        # Ensure we only build Windows targets here, so it never tries to build mac stuff.
        # Common Windows targets: nsis (installer), portable, zip.
        run: pnpm electron-builder --win nsis --x64 --publish never
        shell: bash

      - name: Show artifacts
        run: ls -lah dist || dir dist
        shell: bash

      - name: Upload to Backblaze (Windows artifacts)
        shell: pwsh
        run: |
          aws s3 cp "dist/" "s3://$Env:S3_BUCKET/" `
            --recursive `
            --endpoint-url "$Env:AWS_ENDPOINT_URL_S3" `
            --region "$Env:AWS_DEFAULT_REGION" `
            --acl public-read